一 表结构

from django.db import models
from django.contrib.auth.models import AbstractuUser

class UserInfo(AbstractuUser)
	tel = models.CharField(max_legth=32)

class Room(models.Model):
	'''
	会议室表
	'''
	caption = models.CharField(max_legth=32)
	num = models.IntegerField()
	
	def __str__(self):
		return self.caption

class Book(models.Model)
	'''
	会议预定信息
	'''
	user = models.ForeignKey("UserInfo", on_delete=models.CASCADE)
	room = models.ForeignKey("room", on_delete=models.CASCADE)
	time_choices = models.DateField()
	time_choices = (
		(1, '8:00'),
		(2, '9':00),
		(3, '10':00),
		(4, '11':00),
		(5, '12':00),
		(6, '13':00),
		(7, '14':00),
		(8, '15':00),
		(9, '16':00),
		(10, '17':00),
		(11, '18':00),
	)
	time_id = models.IntegerField(choices=time_choices)
	
	class Meta:
		unique_together = (
			('room','data','time_id'),
			)
			
二 模板
	<h3>会议室预定<h3>
	<talbe class="table table-bordered table-striped">
		<thead>
			<tr>
				<th>会议室/时间</th>
			{% for time_choice in time_choices }
				<th> {{ time_choice.1 }}</th
			{% end for %}
	
			</tr>
		</thead>
		
		<tbody>

		</tbody>
		
		
	</table>	
		
		
		
	def index(request):
		
		tody = datetime.datetime.now().date()
		book_date = request.GET.get("book_date", date)
		time_choice = Book.time_choices
		room_list = Room.objects.all()
		book_list = Book.objects.filter(date=book_date)
		
		
		htmls = ""
		for room in room_list:
			htmls+="<tr><td>{}({})</td>".format(room.caption,room.num)
			for time in time_choice:
				flag = False
				for book in book_list:
					if book.room.pk == room.pk and book.time == time[0]:
						flag = True
						break
				if flag:
					if request.user.pk == book.user.pk:	
						htmls+="<td class='active item' room_id={} time_id={}>{}</td>".format(room.pk,time_choice[0],request.user.username )
					else:
						htmls+="<td class='another_active item' room_id={} time_id={}>{}</td>".format(room.pk,time_choice[0],book.user.username )
				else:
					htmls+="<td class='item' room_id={} time_id={}></td>".format(room.pk,time_choice[0] )
			htmls+="</tr>"
			
	# 绑定事件
	<script>
		// 构建数据
		var POST_DATA = {
			"ADD":{},
			"DEL":{}
		}
	
		// 为td绑定单击事件
		function BindTd(){
			$(".item").click(function(){
				var room_id = $(this).attr("room_id")
				var time_id = $(this).attr("time_id")
				
				// 取消预订
				if($(this).hasClass("active")){
					$(this).removeClass("active").empty()
						if(POST_DATA[room_id]){
							POST_DATA.DEL[room_id].push(time_id)
						}else{
							POST_DATA.DEL[room_id]=[time_id,]
					}
					
				}
				// 临时取消预订
				else if($(this).hasClass("td_active")){
					$(this).removeClass("td_active")
					POST_DATA.ADD[room_id].pop(time_id)
				}
				else{
					$(this).addClass("td_active")
					if(POST_DATA[room_id]){
						POST_DATA.ADD[room_id].push(time_id)
					}else{
						POST_DATA.Add[room_id]=[time_id,]
					}
					
				}
			)	
		}
		
三 保存预订	
		// 发送ajax
		$.ajax({
		    url："/book/",
			type:"POST",
			contentType:"application/json"
			date:{
				post_data:POST_DATA
			},
		}
		)
	</script>
	
	def book(request):

		print(request.POST)
		post_data=json.loads(request.POST.get("post_data")) # {"ADD":{"1":["5"],"2":["5","6"]},"DEL":{"3":["9","10"]}}
		choose_date=request.POST.get("choose_date")

		res={"state":True,"msg":None}
		try:
			# 添加预定
			#post_data["ADD"] : {"1":["5"],"2":["5","6"]}

			book_list=[]
			for room_id,time_id_list in  post_data["ADD"].items():

				for time_id in time_id_list:
					book_obj=Book(user=request.user,room_id=room_id,time_id=time_id,date=choose_date)
					book_list.append(book_obj)

			Book.objects.bulk_create(book_list)


			# 删除预定
			from django.db.models import Q
			# post_data["DEL"]: {"2":["2","3"]}


			remove_book = Q()
			for room_id,time_id_list in post_data["DEL"].items():
				temp = Q()
				for time_id in time_id_list:
					temp.children.append(("room_id",room_id))
					temp.children.append(("time_id",time_id))
					temp.children.append(("user_id",request.user.pk))
					temp.children.append(("date",choose_date))
					remove_book.add(temp,"OR")
			if remove_book:
				 Book.objects.filter(remove_book).delete()



		except Exception as e:
			res["state"]=False
			res["msg"]=str(e)

		return HttpResponse(json.dumps(res))